/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9.1 */

#ifndef PB_TAPGATE_MESSAGES_PB_H_INCLUDED
#define PB_TAPGATE_MESSAGES_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef PB_BYTES_ARRAY_T(32) tapgate_MsgHeader_eph_pub_t;
typedef PB_BYTES_ARRAY_T(12) tapgate_MsgHeader_nonce_t;
typedef struct _tapgate_MsgHeader {
    char client_id[15]; /* fixed 15 bytes, use nanopb max_size:15 */
    tapgate_MsgHeader_eph_pub_t eph_pub; /* fixed 32 bytes, use nanopb max_size:32 */
    tapgate_MsgHeader_nonce_t nonce; /* fixed 12 bytes, use nanopb max_size:12 */
    uint32_t msg_id;
} tapgate_MsgHeader;

typedef struct _tapgate_MsgAction {
    bool has_header;
    tapgate_MsgHeader header;
    char payload[256];
} tapgate_MsgAction;

typedef struct _tapgate_MsgStatus {
    bool has_header;
    tapgate_MsgHeader header;
    bool ok;
} tapgate_MsgStatus;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define tapgate_MsgHeader_init_default           {"", {0, {0}}, {0, {0}}, 0}
#define tapgate_MsgAction_init_default           {false, tapgate_MsgHeader_init_default, ""}
#define tapgate_MsgStatus_init_default           {false, tapgate_MsgHeader_init_default, 0}
#define tapgate_MsgHeader_init_zero              {"", {0, {0}}, {0, {0}}, 0}
#define tapgate_MsgAction_init_zero              {false, tapgate_MsgHeader_init_zero, ""}
#define tapgate_MsgStatus_init_zero              {false, tapgate_MsgHeader_init_zero, 0}

/* Field tags (for use in manual encoding/decoding) */
#define tapgate_MsgHeader_client_id_tag          1
#define tapgate_MsgHeader_eph_pub_tag            2
#define tapgate_MsgHeader_nonce_tag              3
#define tapgate_MsgHeader_msg_id_tag             4
#define tapgate_MsgAction_header_tag             1
#define tapgate_MsgAction_payload_tag            2
#define tapgate_MsgStatus_header_tag             1
#define tapgate_MsgStatus_ok_tag                 2

/* Struct field encoding specification for nanopb */
#define tapgate_MsgHeader_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   client_id,         1) \
X(a, STATIC,   SINGULAR, BYTES,    eph_pub,           2) \
X(a, STATIC,   SINGULAR, BYTES,    nonce,             3) \
X(a, STATIC,   SINGULAR, UINT32,   msg_id,            4)
#define tapgate_MsgHeader_CALLBACK NULL
#define tapgate_MsgHeader_DEFAULT NULL

#define tapgate_MsgAction_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  header,            1) \
X(a, STATIC,   SINGULAR, STRING,   payload,           2)
#define tapgate_MsgAction_CALLBACK NULL
#define tapgate_MsgAction_DEFAULT NULL
#define tapgate_MsgAction_header_MSGTYPE tapgate_MsgHeader

#define tapgate_MsgStatus_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  header,            1) \
X(a, STATIC,   SINGULAR, BOOL,     ok,                2)
#define tapgate_MsgStatus_CALLBACK NULL
#define tapgate_MsgStatus_DEFAULT NULL
#define tapgate_MsgStatus_header_MSGTYPE tapgate_MsgHeader

extern const pb_msgdesc_t tapgate_MsgHeader_msg;
extern const pb_msgdesc_t tapgate_MsgAction_msg;
extern const pb_msgdesc_t tapgate_MsgStatus_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define tapgate_MsgHeader_fields &tapgate_MsgHeader_msg
#define tapgate_MsgAction_fields &tapgate_MsgAction_msg
#define tapgate_MsgStatus_fields &tapgate_MsgStatus_msg

/* Maximum encoded size of messages (where known) */
#define TAPGATE_MESSAGES_PB_H_MAX_SIZE           tapgate_MsgAction_size
#define tapgate_MsgAction_size                   330
#define tapgate_MsgHeader_size                   70
#define tapgate_MsgStatus_size                   74

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
