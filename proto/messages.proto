syntax = "proto2";

package tapgate; // Keep same package across C and C#

// ----------------------------------------------------------------------------

message MessageOnWire {
  oneof msg {
    EnrollMessage    enroll  = 1;
    RegularMessage   opt     = 2;
  }  
}

// Enroll new client message
message EnrollMessage {
  required string secret_code = 1; // temporary Secret code, use nanopb max_size:15 chars 
  required bytes  pub_key     = 2; // Public key, use nanopb max_size:32 bytes
  required uint32 ep_crc32    = 3; // raw message CRC 32
}

// Regular message packed on-wire
message RegularMessage {
  required string client_id         = 1; // use nanopb max_size:15 bytes
  required bytes  eph_pub           = 2; // use nanopb max_size:32 bytes
  required bytes  nonce             = 3; // use nanopb max_size:12 bytes
  required bytes  encrypted_payload = 4; // use nanopb max size:440 bytes
  required uint32 ep_crc32          = 5; // encrypted payload CRC 32
}

// Encrypted payload is part of on-wire message
message MessageEncryptedPayload {
  required uint32  client_nonce = 1;  // anti-replay
  required uint32  msg_code     = 2;  // message opt code
  required bytes   payload      = 3;  // logic messages described in protocol
}

// ----------------------------------------------------------------------------

// Do action client message
message MessageDoAction {
}
